"use strict";$(function(){}),$(function(){var i=$("#devPlanContainer_js"),t=document.getElementById("devPlanTpl").innerHTML,n=template(t,{list:dhcConfig.devpalnList});function e(){768<$(window).width()?$(".timeLine__box").css("width",250*dhcConfig.devpalnList.length):$(".timeLine__box").css("width","auto")}i.html(n),$(window).resize(function(){e()}),e(),function(){var o=$(".scroll-pane"),d=$(".scroll-content"),a=$(".scroll-bar").slider({slide:function(i,t){d.width()>o.width()?(console.log(2),d.css("margin-left",Math.round(t.value/100*(o.width()-d.width()))+"px")):d.css("margin-left",0)}}),i=a.find(".ui-slider-handle").mousedown(function(){a.width(i.width())}).mouseup(function(){a.width("100%")}).wrap("<div class='ui-handle-helper-parent'></div>").parent();function l(){d.width(),o.width(),d.width();o.width(),o.width(),a.find(".ui-slider-handle").css({width:100,"margin-left":-50}),i.width("").width(a.width()-400)}o.css("overflow","hidden"),$(window).resize(function(){var i,t,n,e,s;i=o.width()-d.width(),t="auto"===d.css("margin-left")?0:parseInt(d.css("margin-left")),n=Math.round(t/i*100),a.slider("value",n),l(),e=d.width()+parseInt(d.css("margin-left"),10),0<(s=o.width()-e)&&d.css("margin-left",parseInt(d.css("margin-left"),10)+s)}),setTimeout(l,10)}()}),$(function(){var i=new Swiper(".swiper-container",{speed:600,loop:!0,autoplay:{delay:3e3,stopOnLastSlide:!1,disableOnInteraction:!1},pagination:{el:".swiper-pagination"}});$(".swiper-container").mouseover(function(){i.autoplay.stop()}),$(".swiper-container").mouseout(function(){i.autoplay.start()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
